Testes são pedaços de codigo que voce cria para ter certeza que uma parte do sistema continua funcionando.

- TDD (Test-Driven Development) Desenvolvimento Orientado a Testes = Conceito onde voce cria "primeiro" todo os testes , imaginando todo o seu sistema  e depois de criado os testes , voce vai criando o sistema conforme os testes.

- Tipos de Testes: 

-- Testes unitarios (uni test) = Testes cada unidade ou partes isoladas do codigos como funções  classes especificas , libs .

-- Testes de integração (integration test) = Testes para mais de uma unidade , ou testar 2 unidades que juntas fazem algo , voce testa os 2 juntos. Ex = Cadastro e login de usuarios. Voce faz um teste de integração onde vai testar as 2 funcionalidades juntas.

-- Testes end-to-end (e2e test) = Teste end to end são testes mais focado no que o usuario esta vendo ou seja mais na parte visual do usuario , por exemplo abre a tela de um site ou sistema , aperta um botão pra ver se ta se comportando normal , se o resultado for o que se espera visualmente , se não abrir ou fazer outra coisa ai ja não passo no teste. Resumindo mais na parte da experiencia do usuario.

- Bibliotecas de testes para javascript/typescript e react :
-- Jest = npm install -D jest ts-jest @types/jest
Para criar um arquivo de configuração do jest após ter instalado ele = npx ts-jest config:init
Cria o comando "test": "set NODE_ENV=test& jest --runInBand" la no seu package.json para rodar o teste um apos o outro.

Geralmente se desenvolve testes em ambiente de desnvolvimento.

-CRIAÇÃO DE ARQUIVO TESTES
-- Para criar um teste voce cria como arquivo .test.ts  - Por exemplo quer criar um teste de algum arquivo model , vai ter la o arquivo do model ,e voce cria outro arquivo com o nome nomedomodel.test.ts. Sempre junto da mesma pasta do arquivo em si , para facil localização , ai voce sabe tem uma pasta com o arquivo e outro arquivo.test que seria o test do mesmo.

-- Pode tambem criar uma pasta de testes , e  nomear o arquivo para o nome do arquivo do teste arquivo.model.test.ts. , ou tambem criar tambem assim com o nome do arquivo na pasta teste , mais ja colocando no nome do arquivo tambem o nome do teste que é para que voce quando olhar o nome do arquivo ja saiba o que tem la = arquivo.model.unit.test.ts
